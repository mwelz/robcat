% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/polycor.R
\name{polycor}
\alias{polycor}
\title{Robust estimation of polychoric correlation coefficient}
\usage{
polycor(
  x,
  y,
  c,
  Kx = max(x),
  Ky = max(y),
  variance = TRUE,
  method = "Nelder-Mead",
  constrained = TRUE,
  tol = 0.001,
  init = c(0, init_thresholds(Kx), init_thresholds(Ky)),
  chisq = FALSE
)
}
\arguments{
\item{x}{vector of integer-valued responses to first item}

\item{y}{vector of integer-valued responses to second item}

\item{c}{tuning constant that governs robustness}

\item{Kx}{number of response options in first item (defaults to \code{max(x)})}

\item{Ky}{number of response options in second item (defaults to \code{max(y)})}

\item{variance}{shall an estimated asymptotic covariance matrix be returned? Default is \code{TRUE}}

\item{method}{numerical optimization method; default is Nelder-Mead}

\item{constrained}{shall strict monotonicity of constraints be explicitly enforced by linear constraints?}

\item{tol}{tolerance in numerical optimization}

\item{init}{initialization of numerical optimization. Default is neutral}

\item{chisq}{shall a test for bivariate normality of the latent variables be performed? Default is \code{FALSE}}
}
\value{
A list with the following components. 
\describe{
  \item{\code{theahat}}{A vector of estimates for the polychoric correlation coefficient (\code{rho}) as well as thresholds for \code{x} (named \code{a1,a2,...,a_{Kx-1}}) and \code{y} (named \code{b1,b2,...,b_{Ky-1}}).}
  \item{\code{stderr}}{A vector of standard errors for each estimate in \code{theahat}}
  \item{\code{sigma}}{Estimated asymptotic covariance matrix \eqn{\Sigma}, evaluated at the estimates in \code{theahat}.}
  \item{\code{chisq,pval,df}}{Test statistic, p-value, and degrees of freedom of a test for bivariate normality}
  \item{\code{objective}}{Value of minimized loss function}
  \item{\code{optim}}{Object of class \code{optim}}
}
}
\description{
Robust estimation of polychoric correlation coefficient
}
